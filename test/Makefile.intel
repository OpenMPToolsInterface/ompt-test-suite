HOST:= $(shell hostname -s)

ifeq ($(version),15)
# In Intel 15 "-openmp" is deprecated
FLAG_OMP ?= -qopenmp
else
FLAG_OMP ?= -openmp
endif

# Turn on / off offloading
ifeq ($(offload),yes)
USE_OFFLOAD=1
LIBDIR_OFLD=$(INTEL_OMP_ROOT)/itt/offload/build
LIBDIR_OFLD_PTH=$(LIBDIR_OFLD)/host
LIBDIR_OFLD_LIB=$(LIBDIR_OFLD_PTH)/liboffload.so 
LIBDIR_OFLD_RPTH=-Wl,-rpath=$(LIBDIR_OFLD_PTH) 
else
USE_OFFLOAD=0
endif

# Test target support
ifeq ($(target),yes)
OPT += -DOMPT_TARGET 
endif

ifeq ($(opt),2)
LEVEL=2
else
LEVEL=0
endif

ifeq ($(mode),debug)
VER=deb
else
VER=rel
endif

ifeq ($(strip),yes)
STRIP=stripped
else
STRIP=unstripped
endif

ifeq ($(arch),mic)
ARCH=.knc.lin.off
OPT=-mmic
PREF=lrb
SUFFIX=mic
else
PREF=lin
SUFFIX=host
endif

OPT += -DOMPT_DEBUG -DUSE_OFFLOAD=$(USE_OFFLOAD) -g

LIBDIR_OMP =$(INTEL_OMP_ROOT)/itt/libomp_oss/tmp/$(PREF)_32e-rtl_5_nor_dyn.12.$(VER).40.c0.t0$(ARCH)-$(HOST)/$(STRIP)

LIB =$(LIBDIR_OMP)/libiomp5.so $(LIBDIR_OFLD_LIB) -lm

LIBS=-Wl,-rpath=$(LIBDIR_OMP) $(LIBDIR_OFLD_RPTH) $(LIB)

INCLUDES=-I$(INTEL_OMP_ROOT)/itt/libomp_oss/src
HEADERS=${wildcard *.h}

FC = ifort
EXEC = \
	degenerate-parallel-region \
	degenerate-parallel-region-nested \
	nest1 \
	nest1-unit \
	level1-unit \
	LULESH_OMP \
	main \
	atomic \
	atomic-2 \
	atomic-3 \
	critical \
	critical-cpp \
	enumerate-states \
	idle-blame \
	parloop-for-sampling \
	parregion-for-sampling \
	parregion2-for-sampling \
	parregion4-for-sampling \
	parregion5-for-sampling \
	parregion3-for-sampling-uneven-waiting \
	fib \
	imbalance \
	lateinit \
	locktest \
	locktest-2 \
	level-1 \
	level-2 \
	level-3 \
	level-2-sampling \
	level-4 \
	level-5 \
	master \
	matmult \
	ordered \
	parallelfor \
	single \
	task-1 \
	lateinitf \
	test_task_id-simple

EXEC_TARGET = \
	target_hello \
	target_daxpy \
	target_mulitple_daxpy \
	target_daxpy_tasks \
	target_reduction \
	target_update_data

# EXEC = nest1-unit

EXECS=$(addsuffix .$(SUFFIX),$(EXEC))


ifeq ($(target),yes)
OPT += -DOMPT_TARGET 
EXECS_TARGET=$(addsuffix .$(SUFFIX),$(EXEC_TARGET))
endif

all: $(EXECS) $(EXECS_TARGET)

# FIXME: I was not able to set the rpath on the device for some reason.
# However, it is necessary to use the corresponding liboffload,
# because other versions might be incompatible.
run_omp4: $(EXECS_TARGET)
	@for bin in $(EXECS_TARGET); do \
    echo "========= Running $$bin ============="; \
    MIC_LD_LIBRARY_PATH=$(LIBDIR_OFLD)/target/:$(MIC_LD_LIBRARY_PATH) OMP_NUM_THREADS=2 $$bin; \
    echo; \
  done

clean:
	/bin/rm -f $(EXECS) $(EXECS_TARGET)

$(EXECS) : $(HEADERS) $(LIB)

$(EXECS_TARGETS) : $(HEADERS) $(LIB)

fib.$(SUFFIX): fib.c 
	icc $(INCLUDES) $(OPT) -O$(LEVEL) -g -o $@ $<

luleshMPI_OMP.host: luleshMPI_OMP.cc
	mpicxx $(INCLUDES) $(OPT) -O$(LEVEL) -g -o $@ $(FLAG_OMP) $< $(LIBS)

%.$(SUFFIX): %.c 
	icc $(INCLUDES) $(OPT) -O$(LEVEL) -g -o $@ $(FLAG_OMP) $< $(LIBS)

%.$(SUFFIX): %.cpp 
	icpc $(INCLUDES) $(OPT) -O$(LEVEL) -g -o $@ $(FLAG_OMP) $< $(LIBS)

%.$(SUFFIX): %.f 
	ifort $(INCLUDES) $(OPT) -O$(LEVEL) -g -o $@ $(FLAG_OMP) $< $(LIBS)
